name: test android emulator 2

on:
  workflow_dispatch:

env:
  ANDROID_IMAGE: system-images;android-34;google_apis;x86_64
  FLUTTER_APP_ROOT: ${{ github.workspace }}/packages/patrol/example

jobs:
  main:
    name: Test on Android Emulator
    runs-on:
      labels: ubuntu-latest-4
    timeout-minutes: 60

    strategy:
      fail-fast: false
      matrix:
        flutter-version: ['3.7.x']

    defaults:
      run:
        working-directory: ${{ env.FLUTTER_APP_ROOT }}

    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          lfs: true

      - name: Set up Java
        run: echo "JAVA_HOME="$JAVA_HOME_11_X64"" >> $GITHUB_ENV

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ matrix.flutter-version }}
          cache: true
        
      - name: Enable KVM group perms
        run: |
            echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
            sudo udevadm control --reload-rules
            sudo udevadm trigger --name-match=kvm

      - name: Preload Flutter artifacts
        run: flutter precache

      - name: Set up Patrol CLI
        working-directory: packages/patrol_cli
        run: dart pub global activate --source path . && patrol

      - name: Install ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v2
        id: setup-ffmpeg

      - name: Install sponge
        run: sudo apt-get install moreutils

      - name: Generate gradlew
        run: flutter build apk --debug --flavor=does-not-exist || true

      - name: Add Android tools to path
        run: |
          echo "/usr/local/lib/android/sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "/usr/local/lib/android/sdk/emulator" >> $GITHUB_PATH
          echo "/usr/local/lib/android/sdk/platform-tools" >> $GITHUB_PATH
          flutter config --android-sdk "/usr/local/lib/android/sdk"

      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
            ~/lib/android/sdk/*
          key: avd-${{ env.ANDROID_IMAGE }}
          
      - name: Create emulator for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        run: |
          echo "Downloading Android image..."
          yes | sdkmanager --licenses > /dev/null
          sdkmanager "${{ env.ANDROID_IMAGE }}" > /dev/null
          echo "Done"

          echo "Creating emulator..."
          avdmanager -s create avd -n MyAVD -k "${{ env.ANDROID_IMAGE }}"
          echo "Done"

          echo "Configuring emulator..."
          echo "hw.cpu.ncore=2" >> ~/.android/avd/MyAVD.avd/config.ini
          echo "hw.gpu.enabled=yes" >> ~/.android/avd/MyAVD.avd/config.ini
          echo "hw.gpu.mode=swiftshader_indirect" >> ~/.android/avd/MyAVD.avd/config.ini
          echo "hw.ramSize=4096" >> ~/.android/avd/MyAVD.avd/config.ini
          echo "disk.dataPartition.size=6G" >> ~/.android/avd/MyAVD.avd/config.ini
          echo "hw.camera.back=virtualscene" >> ~/.android/avd/MyAVD.avd/config.ini
          echo "vm.heapSize=576" >> ~/.android/avd/MyAVD.avd/config.ini
          echo "hw.lcd.density=440" >> ~/.android/avd/MyAVD.avd/config.ini
          echo "hw.lcd.height=2220" >> ~/.android/avd/MyAVD.avd/config.ini
          echo "hw.lcd.width=1080" >> ~/.android/avd/MyAVD.avd/config.ini
          echo "Done"

          echo "Booting up and shutting down emulator..."
          emulator @MyAVD -no-window -noaudio -no-boot-anim -no-snapshot-load &
          bash ${{ github.workspace }}/.github/scripts/boot-completed-check.sh
          adb -s emulator-5554 emu kill
          echo "Done"

      - name: Run emulator and tests
        run: ${{ github.workspace }}/.github/scripts/run-emulator-and-tests.sh

      - name: Upload flutter logs to artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: flutter-logs
          path: ${{ env.FLUTTER_APP_ROOT }}/flutter-logs

      - name: Upload tests summary to artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: tests-summary
          path: ${{ env.FLUTTER_APP_ROOT }}/tests-summary

      - name: Upload screenrecordings to artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: screenrecord.mp4
          path: ${{ env.FLUTTER_APP_ROOT }}/screenrecords/screenrecord.mp4
